[build-system]
requires = [
    "poetry-core>=1.7.0",
    "poetry-dynamic-versioning>=1.0.0,<2.0.0",
]
build-backend = "poetry_dynamic_versioning.backend"


[tool.poetry]
name = "schemas"
version = "0.0.0"
description = "Tools for checking if message fits expected format"
readme = "readme.md"
repository = "https://gitlab.syncad.com/hive/clive"
authors = [
    "MichaÅ‚ Kudela <kudmich@syncad.com>",
]
packages = [
    { include = "schemas" },
]


[tool.poetry.dependencies]
python = "^3.12"
msgspec = "0.18.6"
datamodel-code-generator = "0.30.1"
ruff = "0.6.5"

[tool.poetry.dev-dependencies]
pytest = "8.3.5"
pytest-asyncio = "0.25.3"
mypy = "1.11.2"
pre-commit = "2.21.0"

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- set dirty_postfix = '.dirty' if dirty else '' -%}
    {%- if distance == 0 and not dirty -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}{{ dirty_postfix }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}{{ dirty_postfix }}
    {%- endif -%}
"""

[tool.poetry-dynamic-versioning.substitution]
files = [
    "schemas/__init__.py",
]


[tool.mypy]
strict = true
disallow_untyped_decorators = false


[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [  # https://beta.ruff.rs/docs/rules/
    "F",
    "E",
    "W",
    "C",
    "I",
    "N",
    "UP",
    "BLE",
    "B",
    "A",
    "C4",
    "PIE",
    "T20",
    "RET",
    "SIM",
    "TCH",
    "ARG",
    "PTH",
    "ERA",
    "PL",
    "TRY",
    "RUF",
    "UP",
]
ignore = [
    "TCH001", # prevents types used in schema struct declarations from being moved under TYPE_CHECKING
    "E501", # line too long, handled by black
    "TRY003", # too restrictive
]

[tool.ruff.lint.isort]
known-first-party = ["schemas"]
required-imports = ["from __future__ import annotations"]

[tool.pytest.ini_options]
log_cli = true
log_level = "INFO"
log_format = "%(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)"
log_date_format = "%Y-%m-%d %H:%M:"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
